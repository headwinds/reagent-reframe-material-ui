["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:externs",["^ ","~$Error",["^ "]],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$re-frame.core","~:imports",null,"~:requires",["^ ","~$re-frame.interop","^;","~$subs","~$re-frame.subs","~$set","~$clojure.set","~$cofx","~$re-frame.cofx","~$re-frame.interceptor","^B","~$fx","~$re-frame.fx","~$re-frame.events","^E","~$loggers","~$re-frame.loggers","^D","^D","~$re-frame.registrar","^H","~$interceptor","^B","~$router","~$re-frame.router","~$db","~$re-frame.db","~$registrar","^H","^K","^K","^?","^?","~$events","^E","~$re-frame.std-interceptors","^P","^G","^G","^=","^=","~$interop","^;","~$std-interceptors","^P","^A","^A","^M","^M"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$ctx-handler->interceptor","^P","~$fx-handler->interceptor","^P","~$db-handler->interceptor","^P"],"~:defs",["^ ","~$console",["^ ","^7","~$re-frame.core/console","~:file","resources/public/js/out/re_frame/core.cljc","~:line",120,"~:column",1,"~:end-line",120,"~:end-column",13,"~:meta",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",120,"^11",6,"^12",120,"^13",13]],"~$on-changes",["^ ","^7","~$re-frame.core/on-changes","^[","resources/public/js/out/re_frame/core.cljc","^10",44,"^11",1,"^12",44,"^13",16,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",44,"^11",6,"^12",44,"^13",16]],"~$enrich",["^ ","^7","~$re-frame.core/enrich","^[","resources/public/js/out/re_frame/core.cljc","^10",41,"^11",1,"^12",41,"^13",12,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",41,"^11",6,"^12",41,"^13",12]],"~$reg-sub-raw",["^ ","~:protocol-inline",null,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",48,"^11",7,"^12",48,"^13",18,"~:arglists",["~#list",["~$quote",["^1<",[["~$query-id","~$handler-fn"]]]]],"~:doc","Associate a given `query id` with a given subscription handler function `handler-fn`\n   which is expected to take two arguments: app-db and query vector, and return\n   a `reaction`.\n\n  This is a low level, advanced function.  You should probably be using reg-sub\n  instead."],"^7","~$re-frame.core/reg-sub-raw","~:variadic",false,"^[","resources/public/js/out/re_frame/core.cljc","^13",18,"~:method-params",["^1<",[["^1>","^1?"]]],"~:protocol-impl",null,"~:arglists-meta",["^1<",[null,null]],"^11",1,"^10",48,"^12",48,"~:max-fixed-arity",2,"~:fn-var",true,"^1;",["^1<",["^1=",["^1<",[["^1>","^1?"]]]]],"^1@","Associate a given `query id` with a given subscription handler function `handler-fn`\n   which is expected to take two arguments: app-db and query vector, and return\n   a `reaction`.\n\n  This is a low level, advanced function.  You should probably be using reg-sub\n  instead."],"~$subscribe",["^ ","^7","~$re-frame.core/subscribe","^[","resources/public/js/out/re_frame/core.cljc","^10",59,"^11",1,"^12",59,"^13",15,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",59,"^11",6,"^12",59,"^13",15]],"~$assoc-coeffect",["^ ","^7","~$re-frame.core/assoc-coeffect","^[","resources/public/js/out/re_frame/core.cljc","^10",35,"^11",1,"^12",35,"^13",20,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",35,"^11",6,"^12",35,"^13",20]],"~$register-sub",["^ ","^1:",null,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",186,"^11",7,"^12",186,"^13",19,"^1;",["^1<",["^1=",["^1<",[["~$&","~$args"]]]]],"~:top-fn",["^ ","^1B",true,"^1F",0,"^1C",[["^1<",["^1M"]]],"^1;",["^1<",[["~$&","^1M"]]],"^1E",["^1<",[null]]]],"^7","~$re-frame.core/register-sub","^1B",true,"^[","resources/public/js/out/re_frame/core.cljc","^13",19,"^1N",["^ ","^1B",true,"^1F",0,"^1C",[["^1<",["^1M"]]],"^1;",["^1<",[["~$&","^1M"]]],"^1E",["^1<",[null]]],"^1C",[["^1<",["^1M"]]],"^1D",null,"^1E",["^1<",[null]],"^11",1,"^10",186,"^12",186,"^1F",0,"^1G",true,"^1;",["^1<",[["~$&","^1M"]]]],"~$remove-post-event-callback",["^ ","^1:",null,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",174,"^11",7,"^12",174,"^13",33,"^1;",["^1<",["^1=",["^1<",[["~$id"]]]]]],"^7","~$re-frame.core/remove-post-event-callback","^1B",false,"^[","resources/public/js/out/re_frame/core.cljc","^13",33,"^1C",["^1<",[["^1Q"]]],"^1D",null,"^1E",["^1<",[null,null]],"^11",1,"^10",174,"^12",174,"^1F",1,"^1G",true,"^1;",["^1<",["^1=",["^1<",[["^1Q"]]]]]],"~$path",["^ ","^7","~$re-frame.core/path","^[","resources/public/js/out/re_frame/core.cljc","^10",40,"^11",1,"^12",40,"^13",10,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",40,"^11",6,"^12",40,"^13",10]],"~$reg-sub",["^ ","^7","~$re-frame.core/reg-sub","^[","resources/public/js/out/re_frame/core.cljc","^10",58,"^11",1,"^12",58,"^13",13,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",58,"^11",6,"^12",58,"^13",13]],"~$make-restore-fn",["^ ","^1:",null,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",125,"^11",7,"^12",125,"^13",22,"^1;",["^1<",["^1=",["^1<",[[]]]]],"^1@","Checkpoints the state of re-frame and returns a function which, when\n  later called, will restore re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"^7","~$re-frame.core/make-restore-fn","^1B",false,"^[","resources/public/js/out/re_frame/core.cljc","^13",22,"^1C",["^1<",[[]]],"^1D",null,"^1E",["^1<",[null,null]],"^11",1,"^10",125,"^12",125,"^1F",0,"^1G",true,"^1;",["^1<",["^1=",["^1<",[[]]]]],"^1@","Checkpoints the state of re-frame and returns a function which, when\n  later called, will restore re-frame to that checkpointed state.\n\n  Checkpoint includes app-db, all registered handlers and all subscriptions.\n  "],"~$clear-fx",["^ ","^7","~$re-frame.core/clear-fx","^[","resources/public/js/out/re_frame/core.cljc","^10",66,"^11",1,"^12",66,"^13",14,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",66,"^11",6,"^12",66,"^13",14],"~:tag","~$any"],"~$get-effect",["^ ","^7","~$re-frame.core/get-effect","^[","resources/public/js/out/re_frame/core.cljc","^10",33,"^11",1,"^12",33,"^13",16,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",33,"^11",6,"^12",33,"^13",16]],"~$reg-event-db",["^ ","^1:",null,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",77,"^11",7,"^12",77,"^13",19,"^1;",["^1<",["^1=",["^1<",[["^1Q","~$db-handler"],["^1Q","~$interceptors","^24"]]]]],"^1@","Register the given `id`, typically a keyword, with the combination of\n  `db-handler` and an interceptor chain.\n  `db-handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors, possibly nested (needs flattening).\n  `db-handler` is wrapped in an interceptor and added to the end of the chain, so in the end\n   there is only a chain.\n   The necessary effects and coeffects handler are added to the front of the\n   interceptor chain.  These interceptors ensure that app-db is available and updated.","^1N",["^ ","^1B",false,"^1F",3,"^1C",["^1<",[["^1Q","^24"],["^1Q","^25","^24"]]],"^1;",["^1<",[["^1Q","^24"],["^1Q","^25","^24"]]],"^1E",["^1<",[null,null]]]],"^7","~$re-frame.core/reg-event-db","^1B",false,"^[","resources/public/js/out/re_frame/core.cljc","^13",19,"^1N",["^ ","^1B",false,"^1F",3,"^1C",["^1<",[["^1Q","^24"],["^1Q","^25","^24"]]],"^1;",["^1<",[["^1Q","^24"],["^1Q","^25","^24"]]],"^1E",["^1<",[null,null]]],"^1C",["^1<",[["^1Q","^24"],["^1Q","^25","^24"]]],"^1D",null,"^1E",["^1<",[null,null]],"^11",1,"^10",77,"^12",77,"^1F",3,"^1G",true,"^1;",["^1<",[["^1Q","^24"],["^1Q","^25","^24"]]],"^1@","Register the given `id`, typically a keyword, with the combination of\n  `db-handler` and an interceptor chain.\n  `db-handler` is a function: (db event) -> db\n  `interceptors` is a collection of interceptors, possibly nested (needs flattening).\n  `db-handler` is wrapped in an interceptor and added to the end of the chain, so in the end\n   there is only a chain.\n   The necessary effects and coeffects handler are added to the front of the\n   interceptor chain.  These interceptors ensure that app-db is available and updated."],"~$dispatch-sync",["^ ","^7","~$re-frame.core/dispatch-sync","^[","resources/public/js/out/re_frame/core.cljc","^10",21,"^11",1,"^12",21,"^13",19,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",21,"^11",6,"^12",21,"^13",19]],"~$clear-event",["^ ","^7","~$re-frame.core/clear-event","^[","resources/public/js/out/re_frame/core.cljc","^10",75,"^11",1,"^12",75,"^13",17,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",75,"^11",6,"^12",75,"^13",17],"^1[","^20"],"~$->interceptor",["^ ","^7","~$re-frame.core/->interceptor","^[","resources/public/js/out/re_frame/core.cljc","^10",30,"^11",1,"^12",30,"^13",19,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",30,"^11",6,"^12",30,"^13",19]],"~$set-loggers!",["^ ","^7","~$re-frame.core/set-loggers!","^[","resources/public/js/out/re_frame/core.cljc","^10",113,"^11",1,"^12",113,"^13",18,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",113,"^11",6,"^12",113,"^13",18]],"~$inject-cofx",["^ ","^7","~$re-frame.core/inject-cofx","^[","resources/public/js/out/re_frame/core.cljc","^10",70,"^11",1,"^12",70,"^13",17,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",70,"^11",6,"^12",70,"^13",17]],"~$get-coeffect",["^ ","^7","~$re-frame.core/get-coeffect","^[","resources/public/js/out/re_frame/core.cljc","^10",32,"^11",1,"^12",32,"^13",18,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",32,"^11",6,"^12",32,"^13",18]],"~$debug",["^ ","^7","~$re-frame.core/debug","^[","resources/public/js/out/re_frame/core.cljc","^10",39,"^11",1,"^12",39,"^13",11,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",39,"^11",6,"^12",39,"^13",11],"^1[","^20"],"~$assoc-effect",["^ ","^7","~$re-frame.core/assoc-effect","^[","resources/public/js/out/re_frame/core.cljc","^10",34,"^11",1,"^12",34,"^13",18,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",34,"^11",6,"^12",34,"^13",18]],"~$enqueue",["^ ","^7","~$re-frame.core/enqueue","^[","resources/public/js/out/re_frame/core.cljc","^10",31,"^11",1,"^12",31,"^13",13,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",31,"^11",6,"^12",31,"^13",13]],"~$clear-cofx",["^ ","^7","~$re-frame.core/clear-cofx","^[","resources/public/js/out/re_frame/core.cljc","^10",71,"^11",1,"^12",71,"^13",16,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",71,"^11",6,"^12",71,"^13",16],"^1[","^20"],"~$reg-event-ctx",["^ ","^1:",null,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",99,"^11",7,"^12",99,"^13",20,"^1;",["^1<",["^1=",["^1<",[["^1Q","~$handler"],["^1Q","^25","^2L"]]]]],"^1N",["^ ","^1B",false,"^1F",3,"^1C",["^1<",[["^1Q","^2L"],["^1Q","^25","^2L"]]],"^1;",["^1<",[["^1Q","^2L"],["^1Q","^25","^2L"]]],"^1E",["^1<",[null,null]]]],"^7","~$re-frame.core/reg-event-ctx","^1B",false,"^[","resources/public/js/out/re_frame/core.cljc","^13",20,"^1N",["^ ","^1B",false,"^1F",3,"^1C",["^1<",[["^1Q","^2L"],["^1Q","^25","^2L"]]],"^1;",["^1<",[["^1Q","^2L"],["^1Q","^25","^2L"]]],"^1E",["^1<",[null,null]]],"^1C",["^1<",[["^1Q","^2L"],["^1Q","^25","^2L"]]],"^1D",null,"^1E",["^1<",[null,null]],"^11",1,"^10",99,"^12",99,"^1F",3,"^1G",true,"^1;",["^1<",[["^1Q","^2L"],["^1Q","^25","^2L"]]]],"~$reg-fx",["^ ","^7","~$re-frame.core/reg-fx","^[","resources/public/js/out/re_frame/core.cljc","^10",65,"^11",1,"^12",65,"^13",12,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",65,"^11",6,"^12",65,"^13",12],"^1[","^20"],"~$trim-v",["^ ","^7","~$re-frame.core/trim-v","^[","resources/public/js/out/re_frame/core.cljc","^10",42,"^11",1,"^12",42,"^13",12,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",42,"^11",6,"^12",42,"^13",12],"^1[","^20"],"~$clear-sub",["^ ","^7","~$re-frame.core/clear-sub","^[","resources/public/js/out/re_frame/core.cljc","^10",61,"^11",1,"^12",61,"^13",15,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",61,"^11",6,"^12",61,"^13",15],"^1[","^20"],"~$dispatch",["^ ","^7","~$re-frame.core/dispatch","^[","resources/public/js/out/re_frame/core.cljc","^10",20,"^11",1,"^12",20,"^13",14,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",20,"^11",6,"^12",20,"^13",14]],"~$after",["^ ","^7","~$re-frame.core/after","^[","resources/public/js/out/re_frame/core.cljc","^10",43,"^11",1,"^12",43,"^13",11,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",43,"^11",6,"^12",43,"^13",11]],"~$add-post-event-callback",["^ ","^1:",null,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",153,"^11",7,"^12",153,"^13",30,"^1;",["^1<",["^1=",["^1<",[["~$f"],["^1Q","~$f"]]]]],"^1@","Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  ","^1N",["^ ","^1B",false,"^1F",2,"^1C",["^1<",[["~$f"],["^1Q","~$f"]]],"^1;",["^1<",[["~$f"],["^1Q","~$f"]]],"^1E",["^1<",[null,null]]]],"^7","~$re-frame.core/add-post-event-callback","^1B",false,"^[","resources/public/js/out/re_frame/core.cljc","^13",30,"^1N",["^ ","^1B",false,"^1F",2,"^1C",["^1<",[["~$f"],["^1Q","~$f"]]],"^1;",["^1<",[["~$f"],["^1Q","~$f"]]],"^1E",["^1<",[null,null]]],"^1C",["^1<",[["~$f"],["^1Q","~$f"]]],"^1D",null,"^1E",["^1<",[null,null]],"^11",1,"^10",153,"^12",153,"^1F",2,"^1G",true,"^1;",["^1<",[["~$f"],["^1Q","~$f"]]],"^1@","Registers a function `f` to be called after each event is processed\n   `f` will be called with two arguments:\n    - `event`: a vector. The event just processed.\n    - `queue`: a PersistentQueue, possibly empty, of events yet to be processed.\n\n   This is useful in advanced cases like:\n     - you are implementing a complex bootstrap pipeline\n     - you want to create your own handling infrastructure, with perhaps multiple\n       handlers for the one event, etc.  Hook in here.\n     - libraries providing 'isomorphic javascript' rendering on  Nodejs or Nashorn.\n\n  'id' is typically a keyword. Supplied at \"add time\" so it can subsequently\n  be used at \"remove time\" to get rid of the right callback.\n  "],"~$reg-cofx",["^ ","^7","~$re-frame.core/reg-cofx","^[","resources/public/js/out/re_frame/core.cljc","^10",69,"^11",1,"^12",69,"^13",14,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",69,"^11",6,"^12",69,"^13",14],"^1[","^20"],"~$reg-event-fx",["^ ","^1:",null,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",92,"^11",7,"^12",92,"^13",19,"^1;",["^1<",["^1=",["^1<",[["^1Q","~$fx-handler"],["^1Q","^25","^31"]]]]],"^1N",["^ ","^1B",false,"^1F",3,"^1C",["^1<",[["^1Q","^31"],["^1Q","^25","^31"]]],"^1;",["^1<",[["^1Q","^31"],["^1Q","^25","^31"]]],"^1E",["^1<",[null,null]]]],"^7","~$re-frame.core/reg-event-fx","^1B",false,"^[","resources/public/js/out/re_frame/core.cljc","^13",19,"^1N",["^ ","^1B",false,"^1F",3,"^1C",["^1<",[["^1Q","^31"],["^1Q","^25","^31"]]],"^1;",["^1<",[["^1Q","^31"],["^1Q","^25","^31"]]],"^1E",["^1<",[null,null]]],"^1C",["^1<",[["^1Q","^31"],["^1Q","^25","^31"]]],"^1D",null,"^1E",["^1<",[null,null]],"^11",1,"^10",92,"^12",92,"^1F",3,"^1G",true,"^1;",["^1<",[["^1Q","^31"],["^1Q","^25","^31"]]]],"~$register-handler",["^ ","^1:",null,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",181,"^11",7,"^12",181,"^13",23,"^1;",["^1<",["^1=",["^1<",[["~$&","^1M"]]]]],"^1N",["^ ","^1B",true,"^1F",0,"^1C",[["^1<",["^1M"]]],"^1;",["^1<",[["~$&","^1M"]]],"^1E",["^1<",[null]]]],"^7","~$re-frame.core/register-handler","^1B",true,"^[","resources/public/js/out/re_frame/core.cljc","^13",23,"^1N",["^ ","^1B",true,"^1F",0,"^1C",[["^1<",["^1M"]]],"^1;",["^1<",[["~$&","^1M"]]],"^1E",["^1<",[null]]],"^1C",[["^1<",["^1M"]]],"^1D",null,"^1E",["^1<",[null]],"^11",1,"^10",181,"^12",181,"^1F",0,"^1G",true,"^1;",["^1<",[["~$&","^1M"]]]],"~$clear-subscription-cache!",["^ ","^7","~$re-frame.core/clear-subscription-cache!","^[","resources/public/js/out/re_frame/core.cljc","^10",62,"^11",1,"^12",62,"^13",31,"^14",["^ ","^[","/Users/brandonflowers/forks/reagent/examples/material-ui/resources/public/js/out/re_frame/core.cljc","^10",62,"^11",6,"^12",62,"^13",31]]],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^6",["~:warn"]],"~:order",["^3;"]],"^1@",null]