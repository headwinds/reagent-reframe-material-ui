["^ ","~:rename-macros",["^ "],"~:renames",["^ "],"~:use-macros",["^ "],"~:excludes",["~#set",[]],"~:name","~$example.demos.table.events","~:imports",null,"~:requires",["^ ","~$re","~$re-frame.core","^:","^:","~$str","~$clojure.string","^<","^<","~$example.utils.js","^=","~$http","~$example.utils.http-fx","^?","^?"],"~:cljs.spec/speced-vars",[],"~:uses",["^ ","~$PUT","^?","~$POST","^?","~$log","^=","~$records-as-vec","^=","~$set-location","^?","~$GET","^?","~$PATCH","^?"],"~:defs",["^ "],"~:cljs.spec/registry-ref",[],"~:require-macros",null,"~:cljs.analyzer/constants",["^ ","~:seen",["^4",["~:current-user","~:get-people","~:db","~:get-people-success","~:loading?","~:page","~:records","~:total","~:current-file","~:count","~:error","~:http-xhrio","~:people","~:set-current-file","~:get-people-failure","~:results"]],"~:order",["^O","^P","^S","^Y","^Q","^10","^11","^R","^Z","^U","^W","^T","^N","^X","^[","^V"]],"~:doc",null]